{"version":3,"file":"static/js/790.628e8288.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/FilmList/filmList.module.css?c1a7","components/FilmList/FilmList.js","webpack://react-homework-template/./src/pages/Movies/Movies.module.css?82ee","pages/Movies/Movies.js","service/API.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"film\":\"filmList_film__e5yxC\",\"list-film\":\"filmList_list-film__x-rPr\",\"img\":\"filmList_img__-vwGx\",\"title\":\"filmList_title__3xEtq\"};","\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\nimport css from './filmList.module.css'\nimport defaultImg  from '../../imgs/picture-coming-soon.webp'\n\nconst FilmList = ({ movies }) => {\n    return (\n        <ul className={css.film}>\n            {movies.map(({ id, title, poster_path, tagline }) => (\n                <li className={css['list-film']} key={id}>\n                    <img className={css.img }\n                        src={poster_path ? `https://image.tmdb.org/t/p/w500/${poster_path}` : defaultImg}\n                        alt={tagline ? tagline : \"Poster\"}\n                        width={250}\n                        height={360}\n                    />\n                    <Link className={css.title} to={`/detailsFilm/${id}`}>{title}</Link>\n                </li>\n            ))}\n        </ul>\n    );\n};\n\nFilmList.propTypes = {\n    movies: PropTypes.string.isRequired\n}\n\nexport default FilmList;","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Movies_form__4ow+Z\",\"input\":\"Movies_input__KrUqs\",\"label\":\"Movies_label__Khu4Y\",\"btn\":\"Movies_btn__TlfBQ\"};","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getMovieByQuery } from 'service/API';\nimport FilmList from 'components/FilmList/FilmList';\nimport Loader from 'components/Loader/Loader';\nimport css from './Movies.module.css';\n\nconst Movies = () => {\n    const [movies, setMovies] = useState([]);\n    const [searchParams, setSearchParams] = useSearchParams();\n    const [error, setError] = useState(null);\n    const [isLoading, setIsLoading] = useState(true);\n\n    useEffect(() => {\n        const currentQuery = searchParams.get('query');\n        if (!currentQuery) return;\n\n    const fetchMovieByQuery = async () => {\n    try {\n        setIsLoading(true); \n        const movieByQuery = await getMovieByQuery(currentQuery);\n        setMovies(movieByQuery);\n    } catch (error) {\n        setError(error.message);\n    } finally {\n // Встановлюємо після завершення завантаження (навіть якщо виникла помилка)\n        setIsLoading(false); \n    }\n        };\n\n        fetchMovieByQuery();\n    }, [searchParams]);\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const query = e.target.query.value;\n        setSearchParams({ query });\n    };\n\n    return (\n        <div className={css.container}>\n            <form className={css.form} onSubmit={handleSubmit}>\n                <label className={css.label}>\n                    Search:\n                    <input className={css.input} type=\"text\" name=\"query\" />\n                    <button className={css.btn} type=\"submit\">Submit</button>\n                </label>\n            </form>\n            {error && <p>Oops...Somesing went wrong..</p>}\n            {isLoading && <div><Loader/></div>}\n            {movies.length > 0 && <FilmList movies={movies} />}\n        </div>\n    );\n};\n\nexport default Movies;\n\n","import axios from \"axios\";\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '927b7735e8c7db5d43dd9f92192df314';\n\n\nexport const getTrendingMovies = async () => {\n    const { data } = await axios.get(`trending/movie/week?api_key=${API_KEY}`);\n    return data.results;\n};\n\n\nexport const getDetalisMovies = async id => {\n    const { data } = await axios.get(\n        `movie/${id}?api_key=${API_KEY}&language=en-US`\n    );\n    return data;\n};\n\nexport const getCastMovies = async id => {\n        const { data } = await axios.get(\n        `movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    return data;\n}\n\nexport const getRewiewsMovies = async id => {\n    const { data } = await axios.get(\n        `movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n    )\n    return data;\n}\n\nexport const getMovieByQuery = async query => {\n    const { data } = await axios.get(\n        `search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n    );\n\n    return data.results;\n};"],"names":["movies","className","css","map","id","title","poster_path","tagline","src","defaultImg","alt","width","height","to","useState","setMovies","useSearchParams","searchParams","setSearchParams","error","setError","isLoading","setIsLoading","useEffect","currentQuery","get","fetchMovieByQuery","getMovieByQuery","movieByQuery","message","onSubmit","e","preventDefault","query","target","value","type","name","Loader","length","FilmList","axios","API_KEY","getTrendingMovies","data","results","getDetalisMovies","getCastMovies","getRewiewsMovies"],"sourceRoot":""}