{"version":3,"file":"static/js/75.d1ee4dc1.chunk.js","mappings":"wLACA,EAAuB,uBAAvB,EAA0D,4BAA1D,EAA4F,sBAA5F,EAA0H,wB,kBC4B1H,EAtBiB,SAAC,GAAgB,IAAdA,EAAa,EAAbA,OAChB,OACI,eAAIC,UAAWC,EAAf,SACKF,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,YAAaC,EAA3B,EAA2BA,QAA3B,OACR,gBAAIN,UAAWC,EAAf,WACI,gBAAKD,UAAWC,EACZM,IAAKF,EAAW,0CAAsCA,GAAgBG,EACtEC,IAAKH,GAAoB,SACzBI,MAAO,IACPC,OAAQ,OAEZ,SAAC,KAAD,CAAMX,UAAWC,EAAWW,GAAE,uBAAkBT,GAAhD,SAAuDC,MAPrBD,EAD9B,KAavB,C,iHCoBD,UAtCa,WACT,OAA4BU,EAAAA,EAAAA,UAAS,IAArC,eAAOd,EAAP,KAAee,EAAf,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KACA,GAA0BH,EAAAA,EAAAA,UAAS,MAAnC,eAAOI,EAAP,KAAcC,EAAd,KAgBA,OAdAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAW,mCAAG,8GAEOC,EAAAA,EAAAA,IAAkB,IAFzB,OAENC,EAFM,OAGZR,EAAUQ,GACVN,GAAa,GAJD,gDAMZE,EAAS,KAAMK,SANH,yDAAH,qDAUjBH,GACH,GAAE,KAGC,iCACI,eAAII,MAAO,CACPC,WAAY,YACZC,WAAY,OACZC,SAAU,OACVC,UAAW,UAJf,SAKG,mBACFb,GACG,SAAC,IAAD,KAEA,SAAC,IAAD,CAAUhB,OAAQA,IAErBkB,IAAS,uBAAG,mCAGxB,C,+LCtCDY,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAGHT,EAAiB,mCAAG,sGACNQ,EAAAA,EAAAA,IAAA,sCAAyCC,IADnC,uBACrBC,EADqB,EACrBA,KADqB,kBAEtBA,EAAKC,SAFiB,2CAAH,qDAMjBC,EAAgB,mCAAG,WAAM9B,GAAN,yFACL0B,EAAAA,EAAAA,IAAA,gBACV1B,EADU,oBACI2B,EADJ,oBADK,uBACpBC,EADoB,EACpBA,KADoB,kBAIrBA,GAJqB,2CAAH,sDAOhBG,EAAa,mCAAG,WAAM/B,GAAN,yFACE0B,EAAAA,EAAAA,IAAA,gBACd1B,EADc,4BACQ2B,EADR,oBADF,uBACbC,EADa,EACbA,KADa,kBAIlBA,GAJkB,2CAAH,sDAObI,EAAgB,mCAAG,WAAMhC,GAAN,yFACL0B,EAAAA,EAAAA,IAAA,gBACV1B,EADU,4BACY2B,EADZ,oBADK,uBACpBC,EADoB,EACpBA,KADoB,kBAIrBA,GAJqB,2CAAH,sDAOhBK,EAAe,mCAAG,WAAMC,GAAN,yFACJR,EAAAA,EAAAA,IAAA,+BACKC,EADL,kBACsBO,EADtB,+CADI,uBACnBN,EADmB,EACnBA,KADmB,kBAKpBA,EAAKC,SALe,2CAAH,qD","sources":["webpack://react-homework-template/./src/components/FilmList/filmList.module.css?c1a7","components/FilmList/FilmList.js","pages/Home/Home.js","service/API.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"film\":\"filmList_film__e5yxC\",\"list-film\":\"filmList_list-film__x-rPr\",\"img\":\"filmList_img__-vwGx\",\"title\":\"filmList_title__3xEtq\"};","\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\nimport css from './filmList.module.css'\nimport defaultImg  from '../../imgs/picture-coming-soon.webp'\n\nconst FilmList = ({ movies }) => {\n    return (\n        <ul className={css.film}>\n            {movies.map(({ id, title, poster_path, tagline }) => (\n                <li className={css['list-film']} key={id}>\n                    <img className={css.img }\n                        src={poster_path ? `https://image.tmdb.org/t/p/w500/${poster_path}` : defaultImg}\n                        alt={tagline ? tagline : \"Poster\"}\n                        width={250}\n                        height={360}\n                    />\n                    <Link className={css.title} to={`/detailsFilm/${id}`}>{title}</Link>\n                </li>\n            ))}\n        </ul>\n    );\n};\n\nFilmList.propTypes = {\n    movies: PropTypes.string.isRequired\n}\n\nexport default FilmList;","import { useState, useEffect } from \"react\";\nimport { getTrendingMovies } from \"../../service/API\"; \nimport FilmList from \"components/FilmList/FilmList\";\nimport Loader from \"components/Loader/Loader\";\n    \nconst Home = () => {\n    const [movies, setMovies] = useState([]);\n    const [isLoading, setIsLoading] = useState(true);\n    const [error, setError] = useState(null)\n\n    useEffect(() => {\n        const fetchMovies = async () => {\n            try {\n                const film = await getTrendingMovies('');\n                setMovies(film);\n                setIsLoading(false);\n            } catch (error) {\n                setError(error.message)\n            }\n        };\n\n        fetchMovies();\n    }, []);\n\n    return (\n        <>\n            <h1 style={{\n                fontFamily: 'Caprasimo',\n                fontWeight: 'bold',\n                fontSize: '48px',\n                textAlign: 'center',\n            }}>Trending today</h1>\n            {isLoading ? (\n                <Loader />\n            ) : (\n                <FilmList movies={movies} />\n            )}\n            {error && <p>Oops...Somesing went wrong..</p>}\n        </>\n    );\n};\n\n\nexport default Home;","import axios from \"axios\";\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '927b7735e8c7db5d43dd9f92192df314';\n\n\nexport const getTrendingMovies = async () => {\n    const { data } = await axios.get(`trending/movie/week?api_key=${API_KEY}`);\n    return data.results;\n};\n\n\nexport const getDetalisMovies = async id => {\n    const { data } = await axios.get(\n        `movie/${id}?api_key=${API_KEY}&language=en-US`\n    );\n    return data;\n};\n\nexport const getCastMovies = async id => {\n        const { data } = await axios.get(\n        `movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    return data;\n}\n\nexport const getRewiewsMovies = async id => {\n    const { data } = await axios.get(\n        `movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n    )\n    return data;\n}\n\nexport const getMovieByQuery = async query => {\n    const { data } = await axios.get(\n        `search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n    );\n\n    return data.results;\n};"],"names":["movies","className","css","map","id","title","poster_path","tagline","src","defaultImg","alt","width","height","to","useState","setMovies","isLoading","setIsLoading","error","setError","useEffect","fetchMovies","getTrendingMovies","film","message","style","fontFamily","fontWeight","fontSize","textAlign","axios","API_KEY","data","results","getDetalisMovies","getCastMovies","getRewiewsMovies","getMovieByQuery","query"],"sourceRoot":""}