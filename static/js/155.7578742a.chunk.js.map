{"version":3,"file":"static/js/155.7578742a.chunk.js","mappings":"6SACA,GAAgB,KAAO,mBAAmB,WAAW,uBAAuB,KAAO,mBAAmB,SAAS,qBAAqB,QAAU,uB,kBC0D9I,EAlDa,WACT,IAAQA,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAAwBE,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAkCJ,EAAAA,EAAAA,WAAS,GAA3C,eAAOK,EAAP,KAAkBC,EAAlB,KAkBA,OAhBAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAe,mCAAG,oGAEhBF,GAAa,GAFG,UAGSG,EAAAA,EAAAA,IAAcX,GAHvB,OAGVY,EAHU,OAIhBR,EAAQQ,EAAWT,MAJH,gDAMhBG,EAAS,KAAMO,SANC,yBAShBL,GAAa,GATG,4EAAH,qDAYrBE,GACH,GAAE,CAACV,IAECG,GAKD,iBAAKW,UAAWC,EAAAA,KAAhB,UACKV,IAAS,uBAAG,iCACZE,IAAa,0BAAK,SAACS,EAAA,EAAD,MAClBb,EACIc,MAAM,EAAG,IACTC,KAAI,gBAAGlB,EAAH,EAAGA,GAAImB,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,cAAeC,EAApC,EAAoCA,UAApC,OACD,iBAAKP,UAAWC,EAAAA,MAAhB,WACI,gBAAKD,UAAWC,EAAAA,YACZO,IAAKH,EAAY,0CAAsCA,GAAiBI,EACxEC,IAAKJ,KAET,eAAGN,UAAWC,EAAAA,KAAd,WACI,iBAAMD,UAAWC,EAAAA,UAAjB,SAAgC,WAAa,IAAEK,MAEnD,eAAGN,UAAWC,EAAAA,KAAd,WACI,iBAAMD,UAAWC,EAAAA,UAAjB,SAAgC,eAAiB,IAAEM,OAT3BrB,EAD/B,QATN,SAACgB,EAAA,EAAD,GAyBd,C,+LCvDDS,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAGHC,EAAiB,mCAAG,sGACNF,EAAAA,EAAAA,IAAA,sCAAyCC,IADnC,uBACrBE,EADqB,EACrBA,KADqB,kBAEtBA,EAAKC,SAFiB,2CAAH,qDAMjBC,EAAgB,mCAAG,WAAM9B,GAAN,yFACLyB,EAAAA,EAAAA,IAAA,gBACVzB,EADU,oBACI0B,EADJ,oBADK,uBACpBE,EADoB,EACpBA,KADoB,kBAIrBA,GAJqB,2CAAH,sDAOhBjB,EAAa,mCAAG,WAAMX,GAAN,yFACEyB,EAAAA,EAAAA,IAAA,gBACdzB,EADc,4BACQ0B,EADR,oBADF,uBACbE,EADa,EACbA,KADa,kBAIlBA,GAJkB,2CAAH,sDAObG,EAAgB,mCAAG,WAAM/B,GAAN,yFACLyB,EAAAA,EAAAA,IAAA,gBACVzB,EADU,4BACY0B,EADZ,oBADK,uBACpBE,EADoB,EACpBA,KADoB,kBAIrBA,GAJqB,2CAAH,sDAOhBI,EAAe,mCAAG,WAAMC,GAAN,yFACJR,EAAAA,EAAAA,IAAA,+BACKC,EADL,kBACsBO,EADtB,+CADI,uBACnBL,EADmB,EACnBA,KADmB,kBAKpBA,EAAKC,SALe,2CAAH,qD","sources":["webpack://react-homework-template/./src/components/Cast/cast.module.css?8374","components/Cast/Cast.js","service/API.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"cast\":\"cast_cast__+j1FZ\",\"cast-img\":\"cast_cast-img__R-tas\",\"text\":\"cast_text__E0CXR\",\"text-p\":\"cast_text-p__mfVW8\",\"reviews\":\"cast_reviews__hnqOy\"};","\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Loader from \"components/Loader/Loader\";\nimport defaultActor from '../../imgs/cat-png.webp'\nimport css from './cast.module.css'\n\nimport { getCastMovies } from \"../../service/API\";\n\nconst Cast = () => {\n    const { id } = useParams();\n    const [cast, setCast] = useState(null);\n    const [error, setError] = useState(null);\n    const [isLoading, setIsLoading] = useState(false);\n\n    useEffect(() => {\n        const fetchCastMovies = async () => {\n            try {\n                setIsLoading(true);\n                const castMovies = await getCastMovies(id)\n                setCast(castMovies.cast)\n            } catch (error) {\n                setError(error.message)\n            }\n            finally {\n                setIsLoading(false); \n            }\n        }\n        fetchCastMovies()\n    }, [id])\n\n    if (!cast) {\n        return <Loader/>;\n    }\n\n    return (\n        <div className={css.cast}>\n            {error && <p>Oops...Somesing went wrong..</p>}\n            {isLoading && <div><Loader/></div>}\n            {cast\n                .slice(0, 10)\n                .map(({ id, profile_path, original_name, character }) => (\n                    <div className={css.actor} key={id}>\n                        <img className={css['cast-img']}\n                            src={profile_path ? `https://image.tmdb.org/t/p/w500/${profile_path}` : defaultActor}\n                            alt={original_name}\n                        />\n                        <p className={css.text}>\n                            <span className={css['text-p']}>Actor:</span> {original_name}\n                        </p>\n                        <p className={css.text}>\n                            <span className={css['text-p']}>Character:</span> {character}\n                        </p>\n                    </div>\n                ))}\n        </div>\n    );\n}\n\nexport default Cast;","import axios from \"axios\";\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '927b7735e8c7db5d43dd9f92192df314';\n\n\nexport const getTrendingMovies = async () => {\n    const { data } = await axios.get(`trending/movie/week?api_key=${API_KEY}`);\n    return data.results;\n};\n\n\nexport const getDetalisMovies = async id => {\n    const { data } = await axios.get(\n        `movie/${id}?api_key=${API_KEY}&language=en-US`\n    );\n    return data;\n};\n\nexport const getCastMovies = async id => {\n        const { data } = await axios.get(\n        `movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    return data;\n}\n\nexport const getRewiewsMovies = async id => {\n    const { data } = await axios.get(\n        `movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n    )\n    return data;\n}\n\nexport const getMovieByQuery = async query => {\n    const { data } = await axios.get(\n        `search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n    );\n\n    return data.results;\n};"],"names":["id","useParams","useState","cast","setCast","error","setError","isLoading","setIsLoading","useEffect","fetchCastMovies","getCastMovies","castMovies","message","className","css","Loader","slice","map","profile_path","original_name","character","src","defaultActor","alt","axios","API_KEY","getTrendingMovies","data","results","getDetalisMovies","getRewiewsMovies","getMovieByQuery","query"],"sourceRoot":""}